{"version":3,"sources":["App.js","index.js"],"names":["App","useState","albumData","setAlbumData","PhotoData","setPhotoData","useEffect","fetch","then","response","json","data","onChange","e","console","log","target","value","newList","filter","item","title","toLowerCase","includes","album","id","map","filterAlbum","albumId","src","thumbnailUrl","alt","ttle","href","url","Math","floor","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKAqDeA,MAnDf,WACE,IAEA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,qBAAU,WACRC,MANgB,+CAObC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUR,EAAaQ,MAC/BJ,MARgB,+CASbC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUN,EAAaM,QAC9B,IASD,gCACE,uBAAOC,SATS,SAACC,GACnBC,QAAQC,IAAIF,EAAEG,OAAOC,OACrB,IAAMC,EAAUd,EAAUe,QAAO,SAACC,GAChC,OAAOA,EAAKC,MAAMC,cAAcC,SAASV,EAAEG,OAAOC,MAAMK,kBAE1DjB,EAAaa,MAKVhB,EACEiB,QAAO,SAACK,GACP,OAAOA,EAAMC,IAAM,KAEpBC,KAAI,SAACC,GACJ,OACE,gCACE,+BAAKA,EAAYN,MAAjB,OACCjB,EAAUsB,KAAI,SAACN,GACd,GAAIA,EAAKQ,UAAYD,EAAYF,GAC/B,OACE,gCACE,qBAAKI,IAAKT,EAAKU,aAAcC,IAAKX,EAAKY,OACvC,4BAAIZ,EAAKC,QACT,mBAAGY,KAAMb,EAAKc,IAAd,SAAoBd,EAAKc,MACzB,kCAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,QAJ/BjB,EAAKK,SALbE,EAAYF,WC1BlCa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.005d69ae.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction App() {\n  const AlbumsUrl = \"https://jsonplaceholder.typicode.com/albums\";\n  const PhotosUrl = \"https://jsonplaceholder.typicode.com/photos\";\n  const [albumData, setAlbumData] = useState([]);\n  const [PhotoData, setPhotoData] = useState([]);\n\n  useEffect(() => {\n    fetch(AlbumsUrl)\n      .then((response) => response.json())\n      .then((data) => setAlbumData(data));\n    fetch(PhotosUrl)\n      .then((response) => response.json())\n      .then((data) => setPhotoData(data));\n  }, []);\n  const BtnHandeler = (e) => {\n    console.log(e.target.value);\n    const newList = PhotoData.filter((item) => {\n      return item.title.toLowerCase().includes(e.target.value.toLowerCase());\n    });\n    setPhotoData(newList);\n  };\n  return (\n    <div>\n      <input onChange={BtnHandeler}></input>\n      {albumData\n        .filter((album) => {\n          return album.id <= 5;\n        })\n        .map((filterAlbum) => {\n          return (\n            <div key={filterAlbum.id}>\n              <h1>{filterAlbum.title} </h1>\n              {PhotoData.map((item) => {\n                if (item.albumId === filterAlbum.id) {\n                  return (\n                    <div key={item.id}>\n                      <img src={item.thumbnailUrl} alt={item.ttle}></img>\n                      <p>{item.title}</p>\n                      <a href={item.url}>{item.url}</a>\n                      <p>${Math.floor(Math.random() * 250) + 50}</p>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}